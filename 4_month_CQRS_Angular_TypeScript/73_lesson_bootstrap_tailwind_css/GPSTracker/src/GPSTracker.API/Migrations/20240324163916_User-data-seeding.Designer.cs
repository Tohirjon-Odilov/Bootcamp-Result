// <auto-generated />
using System;
using GPSTracker.API.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GPSTracker.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240324163916_User-data-seeding")]
    partial class Userdataseeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GPSTracker.API.Domain.Entities.Auth.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExpireDate = new DateTime(2024, 3, 24, 21, 39, 13, 816, DateTimeKind.Local).AddTicks(7777),
                            PasswordHash = "AoL+NXk75HeX0viAK5M26zpK6hDCyx/iPB35io1ZQxg=",
                            PhoneNumber = "+998912345678",
                            RefreshToken = "1441845a-a3ed-4096-ac7c-454e21cf846a",
                            Salt = "8eb3bfb8-a6d7-451d-96c3-7a847c8f72b1",
                            UserName = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
