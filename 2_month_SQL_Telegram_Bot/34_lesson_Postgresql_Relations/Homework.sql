--Task-1

--a) 
SELECT TITLE
FROM COURSE
WHERE DEPT_NAME = 'Comp. Sci.'
	AND CREDITS = 3;

--b)
SELECT DISTINCT STUDENT.ID
FROM STUDENT
JOIN TAKES USING(ID)
JOIN TEACHES USING(COURSE_ID,
	SEC_ID,
	SEMESTER,
	YEAR)
JOIN INSTRUCTOR ON TEACHES.ID = INSTRUCTOR.ID
WHERE INSTRUCTOR.NAME != 'Einstein'

--c) 
SELECT SALARY
FROM INSTRUCTOR
WHERE SALARY >=
		(SELECT MAX(SALARY)
			FROM INSTRUCTOR)
--d) 
SELECT *
FROM INSTRUCTOR
WHERE SALARY >=
		(SELECT MAX(SALARY)
			FROM INSTRUCTOR)
--e)
SELECT COURSE_ID || ', ' || SEC_ID AS "course_id, sec_id",
	COUNT(*)
FROM TAKES
WHERE YEAR = 2007
	AND SEMESTER = 'Fall'
GROUP BY (COURSE_ID,
			SEC_ID);
--f)
SELECT MAX(ENROLLMENT)
FROM
	(SELECT COUNT(ID) AS ENROLLMENT
		FROM SECTION
		JOIN TAKES USING(COURSE_ID,
							SEC_ID,
							SEMESTER,
							YEAR)
		WHERE SECTION.SEMESTER = 'Autumn'
			AND SECTION.YEAR = 2007
		GROUP BY COURSE_ID,
			SEC_ID)
--Task-2

--a) 
UPDATE INSTRUCTOR
SET SALARY = SALARY + (SALARY / 100 * 10)
WHERE DEPT_NAME = 'Comp. Sci.'

--b)
DELETE
FROM COURSE
WHERE COURSE_ID NOT IN
		(SELECT COURSE_ID
			FROM SECTION)
--c) 
INSERT INTO INSTRUCTOR (ID,
	NAME,
	DEPT_NAME,
	SALARY)
SELECT ID,
	NAME,
	DEPT_NAME,
	10000
FROM STUDENT
WHERE TOT_CRED > 100